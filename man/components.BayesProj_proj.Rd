% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proj-methods.R
\name{components.BayesProj_proj}
\alias{components.BayesProj_proj}
\title{Components from a Projection}
\usage{
\method{components}{BayesProj_proj}(object, what = NULL, interval = 0.95, ...)
}
\arguments{
\item{object}{Results from a call to \code{\link[=project_ts]{project_ts()}}.}

\item{what}{Components to be extracted.
If no value supplied, all available components
are extracted.}

\item{interval}{Width of credible intervals.
A number between 0 and 1. Default is \code{0.95}.}

\item{...}{Not currently used.}
}
\value{
A named list of tibbles, or, if \code{what}
is a single value, a single tibble.
Each tibble contains
\itemize{
\item classification variables, if present
\item \code{.fitted} Point estimates (posterior medians).
\item \code{.lower}, \code{.upper} Lower and upper bounds of
credible intervals.
\item \code{.probability}. A list column with all draws
from the posterior distribution.
}
}
\description{
If the \code{log} argument to
\code{\link[=fit_ts]{fit_ts()}} was \code{TRUE}, then all projected
values are reported on the log scale.
}
\examples{
library(tibble)
data <- tribble(~time, ~val,
                2015,  4.3,
                2016,  4.1,
                2020,  3.5,
                2022,  3.6)
fitted <- fit_ts(data, indvar = "val")
bench <- Benchmarks(tribble(~time, ~q50, ~q90,
                            2030,  1.8,  2.3))
projected <- project_ts(fitted = fitted,
                        time_labels = 2023:2030,
                        spec_bench = bench)
components(projected)
}
\seealso{
\itemize{
\item \code{\link[=project_ts]{project_ts()}} to project a time series model
\item \code{\link[=augment.BayesProj_proj]{augment()}}
combines data and benchmarks.
\item \code{\link[=composite]{composite()}} combines estimates and projections
in a single tibble.
}
}
